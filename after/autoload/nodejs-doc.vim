" this file is auto created by "/Users/aseom/dotfiles/.vim/bundle/vim-nodejs-complete/after/autoload/update-nodejs-doc.js", please do not edit it yourself!
let g:nodejs_complete_data = {"globals":{"process":{"props":[{"word":"abort","info":"process.abort()","kind":"f"},{"word":"arch","kind":"m","info":" "},{"word":"argv","kind":"m","info":" "},{"word":"chdir","info":"process.chdir(directory)","kind":"f"},{"word":"config","kind":"m","info":" "},{"word":"connected","kind":"m","info":" "},{"word":"cpuUsage","info":"process.cpuUsage([previousValue])","kind":"f"},{"word":"cwd","info":"process.cwd()","kind":"f"},{"word":"disconnect","info":"process.disconnect()","kind":"f"},{"word":"emitWarning","info":"process.emitWarning(warning[, name][, ctor])","kind":"f"},{"word":"env","kind":"m","info":" "},{"word":"execArgv","kind":"m","info":" "},{"word":"execPath","kind":"m","info":" "},{"word":"exit","info":"process.exit([code])","kind":"f"},{"word":"exitCode","kind":"m","info":" "},{"word":"getegid","info":"process.getegid()","kind":"f"},{"word":"geteuid","info":"process.geteuid()","kind":"f"},{"word":"getgid","info":"process.getgid()","kind":"f"},{"word":"getgroups","info":"process.getgroups()","kind":"f"},{"word":"getuid","info":"process.getuid()","kind":"f"},{"word":"hrtime","info":"process.hrtime()","kind":"f"},{"word":"initgroups","info":"process.initgroups(user, extra_group)","kind":"f"},{"word":"kill","info":"process.kill(pid[, signal])","kind":"f"},{"word":"mainModule","kind":"m","info":" "},{"word":"memoryUsage","info":"process.memoryUsage()","kind":"f"},{"word":"nextTick","info":"process.nextTick(callback[, arg][, ...])","kind":"f"},{"word":"pid","kind":"m","info":" "},{"word":"platform","kind":"m","info":" "},{"word":"release","kind":"m","info":" "},{"word":"send","info":"process.send(message[, sendHandle[, options]][, callback])","kind":"f"},{"word":"setegid","info":"process.setegid(id)","kind":"f"},{"word":"seteuid","info":"process.seteuid(id)","kind":"f"},{"word":"setgid","info":"process.setgid(id)","kind":"f"},{"word":"setgroups","info":"process.setgroups(groups)","kind":"f"},{"word":"setuid","info":"process.setuid(id)","kind":"f"},{"word":"stderr","kind":"m","info":" "},{"word":"stdin","kind":"m","info":" "},{"word":"stdout","kind":"m","info":" "},{"word":"title","kind":"m","info":" "},{"word":"umask","info":"process.umask([mask])","kind":"f"},{"word":"uptime","info":"process.uptime()","kind":"f"},{"word":"version","kind":"m","info":" "},{"word":"versions","kind":"m","info":" "}],"classes":{}},"require":{"props":[{"word":"cache","kind":"m","info":" "},{"word":"extensions","kind":"m","info":" "},{"word":"resolve","info":"require.resolve()","kind":"f"}],"classes":{}},"Buffer":{"props":[],"classes":{".self":[{"word":"compare","info":"buf.compare(target[, targetStart[, targetEnd[, sourceStart[, sourceEnd]]]])","kind":"f"},{"word":"copy","info":"buf.copy(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]])","kind":"f"},{"word":"entries","info":"buf.entries()","kind":"f"},{"word":"equals","info":"buf.equals(otherBuffer)","kind":"f"},{"word":"fill","info":"buf.fill(value[, offset[, end]][, encoding])","kind":"f"},{"word":"includes","info":"buf.includes(value[, byteOffset][, encoding])","kind":"f"},{"word":"indexOf","info":"buf.indexOf(value[, byteOffset][, encoding])","kind":"f"},{"word":"keys","info":"buf.keys()","kind":"f"},{"word":"lastIndexOf","info":"buf.lastIndexOf(value[, byteOffset][, encoding])","kind":"f"},{"word":"length","kind":"m","info":" "},{"word":"readDoubleBE","info":"buf.readDoubleBE(offset[, noAssert])","kind":"f"},{"word":"readDoubleLE","info":"buf.readDoubleLE(offset[, noAssert])","kind":"f"},{"word":"readFloatBE","info":"buf.readFloatBE(offset[, noAssert])","kind":"f"},{"word":"readFloatLE","info":"buf.readFloatLE(offset[, noAssert])","kind":"f"},{"word":"readInt16BE","info":"buf.readInt16BE(offset[, noAssert])","kind":"f"},{"word":"readInt16LE","info":"buf.readInt16LE(offset[, noAssert])","kind":"f"},{"word":"readInt32BE","info":"buf.readInt32BE(offset[, noAssert])","kind":"f"},{"word":"readInt32LE","info":"buf.readInt32LE(offset[, noAssert])","kind":"f"},{"word":"readInt8","info":"buf.readInt8(offset[, noAssert])","kind":"f"},{"word":"readIntBE","info":"buf.readIntBE(offset, byteLength[, noAssert])","kind":"f"},{"word":"readIntLE","info":"buf.readIntLE(offset, byteLength[, noAssert])","kind":"f"},{"word":"readUInt16BE","info":"buf.readUInt16BE(offset[, noAssert])","kind":"f"},{"word":"readUInt16LE","info":"buf.readUInt16LE(offset[, noAssert])","kind":"f"},{"word":"readUInt32BE","info":"buf.readUInt32BE(offset[, noAssert])","kind":"f"},{"word":"readUInt32LE","info":"buf.readUInt32LE(offset[, noAssert])","kind":"f"},{"word":"readUInt8","info":"buf.readUInt8(offset[, noAssert])","kind":"f"},{"word":"readUIntBE","info":"buf.readUIntBE(offset, byteLength[, noAssert])","kind":"f"},{"word":"readUIntLE","info":"buf.readUIntLE(offset, byteLength[, noAssert])","kind":"f"},{"word":"slice","info":"buf.slice([start[, end]])","kind":"f"},{"word":"swap16","info":"buf.swap16()","kind":"f"},{"word":"swap32","info":"buf.swap32()","kind":"f"},{"word":"toJSON","info":"buf.toJSON()","kind":"f"},{"word":"toString","info":"buf.toString([encoding[, start[, end]]])","kind":"f"},{"word":"values","info":"buf.values()","kind":"f"},{"word":"write","info":"buf.write(string[, offset[, length]][, encoding])","kind":"f"},{"word":"writeDoubleBE","info":"buf.writeDoubleBE(value, offset[, noAssert])","kind":"f"},{"word":"writeDoubleLE","info":"buf.writeDoubleLE(value, offset[, noAssert])","kind":"f"},{"word":"writeFloatBE","info":"buf.writeFloatBE(value, offset[, noAssert])","kind":"f"},{"word":"writeFloatLE","info":"buf.writeFloatLE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt16BE","info":"buf.writeInt16BE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt16LE","info":"buf.writeInt16LE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt32BE","info":"buf.writeInt32BE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt32LE","info":"buf.writeInt32LE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt8","info":"buf.writeInt8(value, offset[, noAssert])","kind":"f"},{"word":"writeIntBE","info":"buf.writeIntBE(value, offset, byteLength[, noAssert])","kind":"f"},{"word":"writeIntLE","info":"buf.writeIntLE(value, offset, byteLength[, noAssert])","kind":"f"},{"word":"writeUInt16BE","info":"buf.writeUInt16BE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt16LE","info":"buf.writeUInt16LE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt32BE","info":"buf.writeUInt32BE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt32LE","info":"buf.writeUInt32LE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt8","info":"buf.writeUInt8(value, offset[, noAssert])","kind":"f"},{"word":"writeUIntBE","info":"buf.writeUIntBE(value, offset, byteLength[, noAssert])","kind":"f"},{"word":"writeUIntLE","info":"buf.writeUIntLE(value, offset, byteLength[, noAssert])","kind":"f"}]}}},"modules":{"Events":{"props":[{"word":"EventEmitter","kind":"f","info":" "}],"classes":{"EventEmitter":[{"word":"addListener","info":"emitter.addListener(eventName, listener)","kind":"f"},{"word":"defaultMaxListeners","kind":"m","info":" "},{"word":"emit","info":"emitter.emit(eventName[, arg1][, arg2][, ...])","kind":"f"},{"word":"eventNames","info":"emitter.eventNames()","kind":"f"},{"word":"getMaxListeners","info":"emitter.getMaxListeners()","kind":"f"},{"word":"listenerCount","info":"emitter.listenerCount(eventName)","kind":"f"},{"word":"listenerCount","info":"EventEmitter.listenerCount(emitter, eventName)","kind":"f"},{"word":"listeners","info":"emitter.listeners(eventName)","kind":"f"},{"word":"on","info":"emitter.on(eventName, listener)","kind":"f"},{"word":"once","info":"emitter.once(eventName, listener)","kind":"f"},{"word":"prependListener","info":"emitter.prependListener(eventName, listener)","kind":"f"},{"word":"prependOnceListener","info":"emitter.prependOnceListener(eventName, listener)","kind":"f"},{"word":"removeAllListeners","info":"emitter.removeAllListeners([eventName])","kind":"f"},{"word":"removeListener","info":"emitter.removeListener(eventName, listener)","kind":"f"},{"word":"setMaxListeners","info":"emitter.setMaxListeners(n)","kind":"f"}]}},"addons":{"props":[{"word":"js","kind":"m","info":" "}],"classes":{}},"assert":{"props":[{"word":"assert","info":"assert(value[, message])","kind":"f"},{"word":"deepEqual","info":"assert.deepEqual(actual, expected[, message])","kind":"f"},{"word":"deepStrictEqual","info":"assert.deepStrictEqual(actual, expected[, message])","kind":"f"},{"word":"doesNotThrow","info":"assert.doesNotThrow(block[, error][, message])","kind":"f"},{"word":"equal","info":"assert.equal(actual, expected[, message])","kind":"f"},{"word":"fail","info":"assert.fail(actual, expected, message, operator)","kind":"f"},{"word":"ifError","info":"assert.ifError(value)","kind":"f"},{"word":"notDeepEqual","info":"assert.notDeepEqual(actual, expected[, message])","kind":"f"},{"word":"notDeepStrictEqual","info":"assert.notDeepStrictEqual(actual, expected[, message])","kind":"f"},{"word":"notEqual","info":"assert.notEqual(actual, expected[, message])","kind":"f"},{"word":"notStrictEqual","info":"assert.notStrictEqual(actual, expected[, message])","kind":"f"},{"word":"ok","info":"assert.ok(value[, message])","kind":"f"},{"word":"strictEqual","info":"assert.strictEqual(actual, expected[, message])","kind":"f"},{"word":"throws","info":"assert.throws(block[, error][, message])","kind":"f"}],"classes":{}},"buffer":{"props":[{"word":"Buffer","kind":"f","info":" "},{"word":"INSPECT_MAX_BYTES","kind":"m","info":" "},{"word":"SlowBuffer","kind":"f","info":" "}],"classes":{"Buffer":[{"word":"compare","info":"buf.compare(target[, targetStart[, targetEnd[, sourceStart[, sourceEnd]]]])","kind":"f"},{"word":"copy","info":"buf.copy(targetBuffer[, targetStart[, sourceStart[, sourceEnd]]])","kind":"f"},{"word":"entries","info":"buf.entries()","kind":"f"},{"word":"equals","info":"buf.equals(otherBuffer)","kind":"f"},{"word":"fill","info":"buf.fill(value[, offset[, end]][, encoding])","kind":"f"},{"word":"includes","info":"buf.includes(value[, byteOffset][, encoding])","kind":"f"},{"word":"indexOf","info":"buf.indexOf(value[, byteOffset][, encoding])","kind":"f"},{"word":"keys","info":"buf.keys()","kind":"f"},{"word":"lastIndexOf","info":"buf.lastIndexOf(value[, byteOffset][, encoding])","kind":"f"},{"word":"length","kind":"m","info":" "},{"word":"readDoubleBE","info":"buf.readDoubleBE(offset[, noAssert])","kind":"f"},{"word":"readDoubleLE","info":"buf.readDoubleLE(offset[, noAssert])","kind":"f"},{"word":"readFloatBE","info":"buf.readFloatBE(offset[, noAssert])","kind":"f"},{"word":"readFloatLE","info":"buf.readFloatLE(offset[, noAssert])","kind":"f"},{"word":"readInt16BE","info":"buf.readInt16BE(offset[, noAssert])","kind":"f"},{"word":"readInt16LE","info":"buf.readInt16LE(offset[, noAssert])","kind":"f"},{"word":"readInt32BE","info":"buf.readInt32BE(offset[, noAssert])","kind":"f"},{"word":"readInt32LE","info":"buf.readInt32LE(offset[, noAssert])","kind":"f"},{"word":"readInt8","info":"buf.readInt8(offset[, noAssert])","kind":"f"},{"word":"readIntBE","info":"buf.readIntBE(offset, byteLength[, noAssert])","kind":"f"},{"word":"readIntLE","info":"buf.readIntLE(offset, byteLength[, noAssert])","kind":"f"},{"word":"readUInt16BE","info":"buf.readUInt16BE(offset[, noAssert])","kind":"f"},{"word":"readUInt16LE","info":"buf.readUInt16LE(offset[, noAssert])","kind":"f"},{"word":"readUInt32BE","info":"buf.readUInt32BE(offset[, noAssert])","kind":"f"},{"word":"readUInt32LE","info":"buf.readUInt32LE(offset[, noAssert])","kind":"f"},{"word":"readUInt8","info":"buf.readUInt8(offset[, noAssert])","kind":"f"},{"word":"readUIntBE","info":"buf.readUIntBE(offset, byteLength[, noAssert])","kind":"f"},{"word":"readUIntLE","info":"buf.readUIntLE(offset, byteLength[, noAssert])","kind":"f"},{"word":"slice","info":"buf.slice([start[, end]])","kind":"f"},{"word":"swap16","info":"buf.swap16()","kind":"f"},{"word":"swap32","info":"buf.swap32()","kind":"f"},{"word":"toJSON","info":"buf.toJSON()","kind":"f"},{"word":"toString","info":"buf.toString([encoding[, start[, end]]])","kind":"f"},{"word":"values","info":"buf.values()","kind":"f"},{"word":"write","info":"buf.write(string[, offset[, length]][, encoding])","kind":"f"},{"word":"writeDoubleBE","info":"buf.writeDoubleBE(value, offset[, noAssert])","kind":"f"},{"word":"writeDoubleLE","info":"buf.writeDoubleLE(value, offset[, noAssert])","kind":"f"},{"word":"writeFloatBE","info":"buf.writeFloatBE(value, offset[, noAssert])","kind":"f"},{"word":"writeFloatLE","info":"buf.writeFloatLE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt16BE","info":"buf.writeInt16BE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt16LE","info":"buf.writeInt16LE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt32BE","info":"buf.writeInt32BE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt32LE","info":"buf.writeInt32LE(value, offset[, noAssert])","kind":"f"},{"word":"writeInt8","info":"buf.writeInt8(value, offset[, noAssert])","kind":"f"},{"word":"writeIntBE","info":"buf.writeIntBE(value, offset, byteLength[, noAssert])","kind":"f"},{"word":"writeIntLE","info":"buf.writeIntLE(value, offset, byteLength[, noAssert])","kind":"f"},{"word":"writeUInt16BE","info":"buf.writeUInt16BE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt16LE","info":"buf.writeUInt16LE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt32BE","info":"buf.writeUInt32BE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt32LE","info":"buf.writeUInt32LE(value, offset[, noAssert])","kind":"f"},{"word":"writeUInt8","info":"buf.writeUInt8(value, offset[, noAssert])","kind":"f"},{"word":"writeUIntBE","info":"buf.writeUIntBE(value, offset, byteLength[, noAssert])","kind":"f"},{"word":"writeUIntLE","info":"buf.writeUIntLE(value, offset, byteLength[, noAssert])","kind":"f"}],"SlowBuffer":[]}},"child_process":{"props":[{"word":"ChildProcess","kind":"f","info":" "}],"classes":{"ChildProcess":[{"word":"connected","kind":"m","info":" "},{"word":"disconnect","info":"child.disconnect()","kind":"f"},{"word":"kill","info":"child.kill([signal])","kind":"f"},{"word":"pid","kind":"m","info":" "},{"word":"send","info":"child.send(message[, sendHandle[, options]][, callback])","kind":"f"},{"word":"stderr","kind":"m","info":" "},{"word":"stdin","kind":"m","info":" "},{"word":"stdio","kind":"m","info":" "},{"word":"stdout","kind":"m","info":" "}]}},"cluster":{"props":[{"word":"disconnect","info":"cluster.disconnect([callback])","kind":"f"},{"word":"fork","info":"cluster.fork([env])","kind":"f"},{"word":"isMaster","kind":"m","info":" "},{"word":"isWorker","kind":"m","info":" "},{"word":"schedulingPolicy","kind":"m","info":" "},{"word":"settings","kind":"m","info":" "},{"word":"setupMaster","info":"cluster.setupMaster([settings])","kind":"f"},{"word":"worker","kind":"m","info":" "},{"word":"Worker","kind":"f","info":" "},{"word":"workers","kind":"m","info":" "}],"classes":{"Worker":[{"word":"disconnect","info":"worker.disconnect()","kind":"f"},{"word":"exitedAfterDisconnect","kind":"m","info":" "},{"word":"id","kind":"m","info":" "},{"word":"isConnected","info":"worker.isConnected()","kind":"f"},{"word":"isDead","info":"worker.isDead()","kind":"f"},{"word":"kill","info":"worker.kill([signal='SIGTERM'])","kind":"f"},{"word":"process","kind":"m","info":" "},{"word":"send","info":"worker.send(message[, sendHandle][, callback])","kind":"f"},{"word":"suicide","kind":"m","info":" "}]}},"console":{"props":[{"word":"Console","kind":"f","info":" "}],"classes":{"Console":[{"word":"assert","info":"console.assert(value[, message][, ...])","kind":"f"},{"word":"dir","info":"console.dir(obj[, options])","kind":"f"},{"word":"error","info":"console.error([data][, ...])","kind":"f"},{"word":"info","info":"console.info([data][, ...])","kind":"f"},{"word":"log","info":"console.log([data][, ...])","kind":"f"},{"word":"time","info":"console.time(label)","kind":"f"},{"word":"timeEnd","info":"console.timeEnd(label)","kind":"f"},{"word":"trace","info":"console.trace(message[, ...])","kind":"f"},{"word":"warn","info":"console.warn([data][, ...])","kind":"f"}]}},"crypto":{"props":[{"word":"Certificate","kind":"f","info":" "},{"word":"Cipher","kind":"f","info":" "},{"word":"Decipher","kind":"f","info":" "},{"word":"DiffieHellman","kind":"f","info":" "},{"word":"ECDH","kind":"f","info":" "},{"word":"Hash","kind":"f","info":" "},{"word":"Hmac","kind":"f","info":" "},{"word":"Sign","kind":"f","info":" "},{"word":"Verify","kind":"f","info":" "}],"classes":{"Certificate":[{"word":"Certificate","info":"new crypto.Certificate()","kind":"f"},{"word":"exportChallenge","info":"certificate.exportChallenge(spkac)","kind":"f"},{"word":"exportPublicKey","info":"certificate.exportPublicKey(spkac)","kind":"f"},{"word":"verifySpkac","info":"certificate.verifySpkac(spkac)","kind":"f"}],"Cipher":[{"word":"final","info":"cipher.final([output_encoding])","kind":"f"},{"word":"getAuthTag","info":"cipher.getAuthTag()","kind":"f"},{"word":"setAAD","info":"cipher.setAAD(buffer)","kind":"f"},{"word":"setAutoPadding","info":"cipher.setAutoPadding(auto_padding=true)","kind":"f"},{"word":"update","info":"cipher.update(data[, input_encoding][, output_encoding])","kind":"f"}],"Decipher":[{"word":"final","info":"decipher.final([output_encoding])","kind":"f"},{"word":"setAAD","info":"decipher.setAAD(buffer)","kind":"f"},{"word":"setAuthTag","info":"decipher.setAuthTag(buffer)","kind":"f"},{"word":"setAutoPadding","info":"decipher.setAutoPadding(auto_padding=true)","kind":"f"},{"word":"update","info":"decipher.update(data[, input_encoding][, output_encoding])","kind":"f"}],"DiffieHellman":[{"word":"computeSecret","info":"diffieHellman.computeSecret(other_public_key[, input_encoding][, output_encoding])","kind":"f"},{"word":"generateKeys","info":"diffieHellman.generateKeys([encoding])","kind":"f"},{"word":"getGenerator","info":"diffieHellman.getGenerator([encoding])","kind":"f"},{"word":"getPrime","info":"diffieHellman.getPrime([encoding])","kind":"f"},{"word":"getPrivateKey","info":"diffieHellman.getPrivateKey([encoding])","kind":"f"},{"word":"getPublicKey","info":"diffieHellman.getPublicKey([encoding])","kind":"f"},{"word":"setPrivateKey","info":"diffieHellman.setPrivateKey(private_key[, encoding])","kind":"f"},{"word":"setPublicKey","info":"diffieHellman.setPublicKey(public_key[, encoding])","kind":"f"},{"word":"verifyError","kind":"m","info":" "}],"ECDH":[{"word":"computeSecret","info":"ecdh.computeSecret(other_public_key[, input_encoding][, output_encoding])","kind":"f"},{"word":"generateKeys","info":"ecdh.generateKeys([encoding[, format]])","kind":"f"},{"word":"getPrivateKey","info":"ecdh.getPrivateKey([encoding])","kind":"f"},{"word":"getPublicKey","info":"ecdh.getPublicKey([encoding[, format]])","kind":"f"},{"word":"setPrivateKey","info":"ecdh.setPrivateKey(private_key[, encoding])","kind":"f"},{"word":"setPublicKey","info":"ecdh.setPublicKey(public_key[, encoding])","kind":"f"}],"Hash":[{"word":"digest","info":"hash.digest([encoding])","kind":"f"},{"word":"update","info":"hash.update(data[, input_encoding])","kind":"f"}],"Hmac":[{"word":"digest","info":"hmac.digest([encoding])","kind":"f"},{"word":"update","info":"hmac.update(data[, input_encoding])","kind":"f"}],"Sign":[{"word":"sign","info":"sign.sign(private_key[, output_format])","kind":"f"},{"word":"update","info":"sign.update(data[, input_encoding])","kind":"f"}],"Verify":[{"word":"update","info":"verifier.update(data[, input_encoding])","kind":"f"},{"word":"verify","info":"verifier.verify(object, signature[, signature_format])","kind":"f"}]}},"dgram":{"props":[{"word":"Socket","kind":"f","info":" "}],"classes":{"Socket":[{"word":"addMembership","info":"socket.addMembership(multicastAddress[, multicastInterface])","kind":"f"},{"word":"address","info":"socket.address()","kind":"f"},{"word":"bind","info":"socket.bind([port][, address][, callback])","kind":"f"},{"word":"bind","info":"socket.bind(options[, callback])","kind":"f"},{"word":"close","info":"socket.close([callback])","kind":"f"},{"word":"dropMembership","info":"socket.dropMembership(multicastAddress[, multicastInterface])","kind":"f"},{"word":"ref","info":"socket.ref()","kind":"f"},{"word":"send","info":"socket.send(msg, [offset, length,] port, address[, callback])","kind":"f"},{"word":"setBroadcast","info":"socket.setBroadcast(flag)","kind":"f"},{"word":"setMulticastLoopback","info":"socket.setMulticastLoopback(flag)","kind":"f"},{"word":"setMulticastTTL","info":"socket.setMulticastTTL(ttl)","kind":"f"},{"word":"setTTL","info":"socket.setTTL(ttl)","kind":"f"},{"word":"unref","info":"socket.unref()","kind":"f"}]}},"dns":{"props":[{"word":"getServers","info":"dns.getServers()","kind":"f"},{"word":"lookup","info":"dns.lookup(hostname[, options], callback)","kind":"f"},{"word":"lookupService","info":"dns.lookupService(address, port, callback)","kind":"f"},{"word":"resolve","info":"dns.resolve(hostname[, rrtype], callback)","kind":"f"},{"word":"resolve4","info":"dns.resolve4(hostname, callback)","kind":"f"},{"word":"resolve6","info":"dns.resolve6(hostname, callback)","kind":"f"},{"word":"resolveCname","info":"dns.resolveCname(hostname, callback)","kind":"f"},{"word":"resolveMx","info":"dns.resolveMx(hostname, callback)","kind":"f"},{"word":"resolveNs","info":"dns.resolveNs(hostname, callback)","kind":"f"},{"word":"resolvePtr","info":"dns.resolvePtr(hostname, callback)","kind":"f"},{"word":"resolveSoa","info":"dns.resolveSoa(hostname, callback)","kind":"f"},{"word":"resolveSrv","info":"dns.resolveSrv(hostname, callback)","kind":"f"},{"word":"resolveTxt","info":"dns.resolveTxt(hostname, callback)","kind":"f"},{"word":"reverse","info":"dns.reverse(ip, callback)","kind":"f"},{"word":"setServers","info":"dns.setServers(servers)","kind":"f"}],"classes":{}},"domain":{"props":[{"word":"create","info":"domain.create()","kind":"f"},{"word":"Domain","kind":"f","info":" "}],"classes":{"Domain":[{"word":"add","info":"domain.add(emitter)","kind":"f"},{"word":"bind","info":"domain.bind(callback)","kind":"f"},{"word":"dispose","info":"domain.dispose()","kind":"f"},{"word":"enter","info":"domain.enter()","kind":"f"},{"word":"exit","info":"domain.exit()","kind":"f"},{"word":"intercept","info":"domain.intercept(callback)","kind":"f"},{"word":"members","kind":"m","info":" "},{"word":"remove","info":"domain.remove(emitter)","kind":"f"},{"word":"run","info":"domain.run(fn[, arg][, ...])","kind":"f"}]}},"fs":{"props":[{"word":"access","info":"fs.access(path[, mode], callback)","kind":"f"},{"word":"accessSync","info":"fs.accessSync(path[, mode])","kind":"f"},{"word":"appendFile","info":"fs.appendFile(file, data[, options], callback)","kind":"f"},{"word":"appendFileSync","info":"fs.appendFileSync(file, data[, options])","kind":"f"},{"word":"chmod","info":"fs.chmod(path, mode, callback)","kind":"f"},{"word":"chmodSync","info":"fs.chmodSync(path, mode)","kind":"f"},{"word":"chown","info":"fs.chown(path, uid, gid, callback)","kind":"f"},{"word":"chownSync","info":"fs.chownSync(path, uid, gid)","kind":"f"},{"word":"close","info":"fs.close(fd, callback)","kind":"f"},{"word":"closeSync","info":"fs.closeSync(fd)","kind":"f"},{"word":"createReadStream","info":"fs.createReadStream(path[, options])","kind":"f"},{"word":"createWriteStream","info":"fs.createWriteStream(path[, options])","kind":"f"},{"word":"exists","info":"fs.exists(path, callback)","kind":"f"},{"word":"existsSync","info":"fs.existsSync(path)","kind":"f"},{"word":"fchmod","info":"fs.fchmod(fd, mode, callback)","kind":"f"},{"word":"fchmodSync","info":"fs.fchmodSync(fd, mode)","kind":"f"},{"word":"fchown","info":"fs.fchown(fd, uid, gid, callback)","kind":"f"},{"word":"fchownSync","info":"fs.fchownSync(fd, uid, gid)","kind":"f"},{"word":"fdatasync","info":"fs.fdatasync(fd, callback)","kind":"f"},{"word":"fdatasyncSync","info":"fs.fdatasyncSync(fd)","kind":"f"},{"word":"fstat","info":"fs.fstat(fd, callback)","kind":"f"},{"word":"fstatSync","info":"fs.fstatSync(fd)","kind":"f"},{"word":"FSWatcher","kind":"f","info":" "},{"word":"fsync","info":"fs.fsync(fd, callback)","kind":"f"},{"word":"fsyncSync","info":"fs.fsyncSync(fd)","kind":"f"},{"word":"ftruncate","info":"fs.ftruncate(fd, len, callback)","kind":"f"},{"word":"ftruncateSync","info":"fs.ftruncateSync(fd, len)","kind":"f"},{"word":"futimes","info":"fs.futimes(fd, atime, mtime, callback)","kind":"f"},{"word":"futimesSync","info":"fs.futimesSync(fd, atime, mtime)","kind":"f"},{"word":"lchmod","info":"fs.lchmod(path, mode, callback)","kind":"f"},{"word":"lchmodSync","info":"fs.lchmodSync(path, mode)","kind":"f"},{"word":"lchown","info":"fs.lchown(path, uid, gid, callback)","kind":"f"},{"word":"lchownSync","info":"fs.lchownSync(path, uid, gid)","kind":"f"},{"word":"link","info":"fs.link(srcpath, dstpath, callback)","kind":"f"},{"word":"linkSync","info":"fs.linkSync(srcpath, dstpath)","kind":"f"},{"word":"lstat","info":"fs.lstat(path, callback)","kind":"f"},{"word":"lstatSync","info":"fs.lstatSync(path)","kind":"f"},{"word":"mkdir","info":"fs.mkdir(path[, mode], callback)","kind":"f"},{"word":"mkdirSync","info":"fs.mkdirSync(path[, mode])","kind":"f"},{"word":"mkdtemp","info":"fs.mkdtemp(prefix, callback)","kind":"f"},{"word":"mkdtempSync","info":"fs.mkdtempSync(template)","kind":"f"},{"word":"open","info":"fs.open(path, flags[, mode], callback)","kind":"f"},{"word":"openSync","info":"fs.openSync(path, flags[, mode])","kind":"f"},{"word":"read","info":"fs.read(fd, buffer, offset, length, position, callback)","kind":"f"},{"word":"readdir","info":"fs.readdir(path[, options], callback)","kind":"f"},{"word":"readdirSync","info":"fs.readdirSync(path[, options])","kind":"f"},{"word":"readFile","info":"fs.readFile(file[, options], callback)","kind":"f"},{"word":"readFileSync","info":"fs.readFileSync(file[, options])","kind":"f"},{"word":"readlink","info":"fs.readlink(path[, options], callback)","kind":"f"},{"word":"readlinkSync","info":"fs.readlinkSync(path[, options])","kind":"f"},{"word":"ReadStream","kind":"f","info":" "},{"word":"readSync","info":"fs.readSync(fd, buffer, offset, length, position)","kind":"f"},{"word":"realpath","info":"fs.realpath(path[, options], callback)","kind":"f"},{"word":"realpathSync","info":"fs.realpathSync(path[, options])","kind":"f"},{"word":"rename","info":"fs.rename(oldPath, newPath, callback)","kind":"f"},{"word":"renameSync","info":"fs.renameSync(oldPath, newPath)","kind":"f"},{"word":"rmdir","info":"fs.rmdir(path, callback)","kind":"f"},{"word":"rmdirSync","info":"fs.rmdirSync(path)","kind":"f"},{"word":"stat","info":"fs.stat(path, callback)","kind":"f"},{"word":"Stats","kind":"f","info":" "},{"word":"statSync","info":"fs.statSync(path)","kind":"f"},{"word":"symlink","info":"fs.symlink(target, path[, type], callback)","kind":"f"},{"word":"symlinkSync","info":"fs.symlinkSync(target, path[, type])","kind":"f"},{"word":"truncate","info":"fs.truncate(path, len, callback)","kind":"f"},{"word":"truncateSync","info":"fs.truncateSync(path, len)","kind":"f"},{"word":"unlink","info":"fs.unlink(path, callback)","kind":"f"},{"word":"unlinkSync","info":"fs.unlinkSync(path)","kind":"f"},{"word":"unwatchFile","info":"fs.unwatchFile(filename[, listener])","kind":"f"},{"word":"utimes","info":"fs.utimes(path, atime, mtime, callback)","kind":"f"},{"word":"utimesSync","info":"fs.utimesSync(path, atime, mtime)","kind":"f"},{"word":"watch","info":"fs.watch(filename[, options][, listener])","kind":"f"},{"word":"watchFile","info":"fs.watchFile(filename[, options], listener)","kind":"f"},{"word":"write","info":"fs.write(fd, buffer, offset, length[, position], callback)","kind":"f"},{"word":"write","info":"fs.write(fd, data[, position[, encoding]], callback)","kind":"f"},{"word":"writeFile","info":"fs.writeFile(file, data[, options], callback)","kind":"f"},{"word":"writeFileSync","info":"fs.writeFileSync(file, data[, options])","kind":"f"},{"word":"WriteStream","kind":"f","info":" "},{"word":"writeSync","info":"fs.writeSync(fd, data[, position[, encoding]])","kind":"f"},{"word":"writeSync","info":"fs.writeSync(fd, buffer, offset, length[, position])","kind":"f"}],"classes":{"FSWatcher":[{"word":"close","info":"watcher.close()","kind":"f"}],"ReadStream":[{"word":"path","kind":"m","info":" "}],"Stats":[],"WriteStream":[{"word":"bytesWritten","kind":"m","info":" "},{"word":"path","kind":"m","info":" "}]}},"http":{"props":[{"word":"Agent","kind":"f","info":" "},{"word":"ClientRequest","kind":"f","info":" "},{"word":"createClient","info":"http.createClient([port][, host])","kind":"f"},{"word":"createServer","info":"http.createServer([requestListener])","kind":"f"},{"word":"get","info":"http.get(options[, callback])","kind":"f"},{"word":"globalAgent","kind":"m","info":" "},{"word":"IncomingMessage","kind":"f","info":" "},{"word":"METHODS","kind":"m","info":" "},{"word":"request","info":"http.request(options[, callback])","kind":"f"},{"word":"Server","kind":"f","info":" "},{"word":"ServerResponse","kind":"f","info":" "},{"word":"STATUS_CODES","kind":"m","info":" "}],"classes":{"Agent":[{"word":"createConnection","info":"agent.createConnection(options[, callback])","kind":"f"},{"word":"destroy","info":"agent.destroy()","kind":"f"},{"word":"freeSockets","kind":"m","info":" "},{"word":"getName","info":"agent.getName(options)","kind":"f"},{"word":"maxFreeSockets","kind":"m","info":" "},{"word":"maxSockets","kind":"m","info":" "},{"word":"requests","kind":"m","info":" "},{"word":"sockets","kind":"m","info":" "}],"ClientRequest":[{"word":"abort","info":"request.abort()","kind":"f"},{"word":"end","info":"request.end([data][, encoding][, callback])","kind":"f"},{"word":"flushHeaders","info":"request.flushHeaders()","kind":"f"},{"word":"setNoDelay","info":"request.setNoDelay([noDelay])","kind":"f"},{"word":"setSocketKeepAlive","info":"request.setSocketKeepAlive([enable][, initialDelay])","kind":"f"},{"word":"setTimeout","info":"request.setTimeout(timeout[, callback])","kind":"f"},{"word":"write","info":"request.write(chunk[, encoding][, callback])","kind":"f"}],"Server":[{"word":"close","info":"server.close([callback])","kind":"f"},{"word":"listen","info":"server.listen(handle[, callback])","kind":"f"},{"word":"listen","info":"server.listen(path[, callback])","kind":"f"},{"word":"listen","info":"server.listen(port[, hostname][, backlog][, callback])","kind":"f"},{"word":"listening","kind":"m","info":" "},{"word":"maxHeadersCount","kind":"m","info":" "},{"word":"setTimeout","info":"server.setTimeout(msecs, callback)","kind":"f"},{"word":"timeout","kind":"m","info":" "}],"ServerResponse":[{"word":"addTrailers","info":"response.addTrailers(headers)","kind":"f"},{"word":"end","info":"response.end([data][, encoding][, callback])","kind":"f"},{"word":"finished","kind":"m","info":" "},{"word":"getHeader","info":"response.getHeader(name)","kind":"f"},{"word":"headersSent","kind":"m","info":" "},{"word":"removeHeader","info":"response.removeHeader(name)","kind":"f"},{"word":"sendDate","kind":"m","info":" "},{"word":"setHeader","info":"response.setHeader(name, value)","kind":"f"},{"word":"setTimeout","info":"response.setTimeout(msecs, callback)","kind":"f"},{"word":"statusCode","kind":"m","info":" "},{"word":"statusMessage","kind":"m","info":" "},{"word":"write","info":"response.write(chunk[, encoding][, callback])","kind":"f"},{"word":"writeContinue","info":"response.writeContinue()","kind":"f"},{"word":"writeHead","info":"response.writeHead(statusCode[, statusMessage][, headers])","kind":"f"}],"IncomingMessage":[{"word":"headers","kind":"m","info":" "},{"word":"httpVersion","kind":"m","info":" "},{"word":"method","kind":"m","info":" "},{"word":"rawHeaders","kind":"m","info":" "},{"word":"rawTrailers","kind":"m","info":" "},{"word":"setTimeout","info":"message.setTimeout(msecs, callback)","kind":"f"},{"word":"socket","kind":"m","info":" "},{"word":"statusCode","kind":"m","info":" "},{"word":"statusMessage","kind":"m","info":" "},{"word":"trailers","kind":"m","info":" "},{"word":"url","kind":"m","info":" "}]}},"https":{"props":[{"word":"Agent","kind":"f","info":" "},{"word":"createServer","info":"https.createServer(options[, requestListener])","kind":"f"},{"word":"get","info":"https.get(options, callback)","kind":"f"},{"word":"globalAgent","kind":"m","info":" "},{"word":"request","info":"https.request(options, callback)","kind":"f"},{"word":"Server","kind":"f","info":" "}],"classes":{"Agent":[],"Server":[{"word":"setTimeout","info":"server.setTimeout(msecs, callback)","kind":"f"},{"word":"timeout","kind":"m","info":" "}]}},"net":{"props":[{"word":"connect","info":"net.connect(options[, connectListener])","kind":"f"},{"word":"connect","info":"net.connect(port[, host][, connectListener])","kind":"f"},{"word":"connect","info":"net.connect(path[, connectListener])","kind":"f"},{"word":"createConnection","info":"net.createConnection(options[, connectListener])","kind":"f"},{"word":"createConnection","info":"net.createConnection(path[, connectListener])","kind":"f"},{"word":"createConnection","info":"net.createConnection(port[, host][, connectListener])","kind":"f"},{"word":"createServer","info":"net.createServer([options][, connectionListener])","kind":"f"},{"word":"isIP","info":"net.isIP(input)","kind":"f"},{"word":"isIPv4","info":"net.isIPv4(input)","kind":"f"},{"word":"isIPv6","info":"net.isIPv6(input)","kind":"f"},{"word":"Server","kind":"f","info":" "},{"word":"Socket","kind":"f","info":" "}],"classes":{"Server":[{"word":"address","info":"server.address()","kind":"f"},{"word":"close","info":"server.close([callback])","kind":"f"},{"word":"connections","kind":"m","info":" "},{"word":"getConnections","info":"server.getConnections(callback)","kind":"f"},{"word":"listen","info":"server.listen(port[, hostname][, backlog][, callback])","kind":"f"},{"word":"listen","info":"server.listen(handle[, backlog][, callback])","kind":"f"},{"word":"listen","info":"server.listen(path[, backlog][, callback])","kind":"f"},{"word":"listen","info":"server.listen(options[, callback])","kind":"f"},{"word":"listening","kind":"m","info":" "},{"word":"maxConnections","kind":"m","info":" "},{"word":"ref","info":"server.ref()","kind":"f"},{"word":"unref","info":"server.unref()","kind":"f"}],"Socket":[{"word":"address","info":"socket.address()","kind":"f"},{"word":"bufferSize","kind":"m","info":" "},{"word":"bytesRead","kind":"m","info":" "},{"word":"bytesWritten","kind":"m","info":" "},{"word":"connect","info":"socket.connect(path[, connectListener])","kind":"f"},{"word":"connect","info":"socket.connect(options[, connectListener])","kind":"f"},{"word":"connect","info":"socket.connect(port[, host][, connectListener])","kind":"f"},{"word":"connecting","kind":"m","info":" "},{"word":"destroy","info":"socket.destroy()","kind":"f"},{"word":"end","info":"socket.end([data][, encoding])","kind":"f"},{"word":"localAddress","kind":"m","info":" "},{"word":"localPort","kind":"m","info":" "},{"word":"pause","info":"socket.pause()","kind":"f"},{"word":"ref","info":"socket.ref()","kind":"f"},{"word":"remoteAddress","kind":"m","info":" "},{"word":"remoteFamily","kind":"m","info":" "},{"word":"remotePort","kind":"m","info":" "},{"word":"resume","info":"socket.resume()","kind":"f"},{"word":"setEncoding","info":"socket.setEncoding([encoding])","kind":"f"},{"word":"setKeepAlive","info":"socket.setKeepAlive([enable][, initialDelay])","kind":"f"},{"word":"setNoDelay","info":"socket.setNoDelay([noDelay])","kind":"f"},{"word":"setTimeout","info":"socket.setTimeout(timeout[, callback])","kind":"f"},{"word":"Socket","info":"new net.Socket([options])","kind":"f"},{"word":"unref","info":"socket.unref()","kind":"f"},{"word":"write","info":"socket.write(data[, encoding][, callback])","kind":"f"}]}},"os":{"props":[{"word":"arch","info":"os.arch()","kind":"f"},{"word":"cpus","info":"os.cpus()","kind":"f"},{"word":"endianness","info":"os.endianness()","kind":"f"},{"word":"EOL","kind":"m","info":" "},{"word":"freemem","info":"os.freemem()","kind":"f"},{"word":"homedir","info":"os.homedir()","kind":"f"},{"word":"hostname","info":"os.hostname()","kind":"f"},{"word":"loadavg","info":"os.loadavg()","kind":"f"},{"word":"networkInterfaces","info":"os.networkInterfaces()","kind":"f"},{"word":"platform","info":"os.platform()","kind":"f"},{"word":"release","info":"os.release()","kind":"f"},{"word":"tmpdir","info":"os.tmpdir()","kind":"f"},{"word":"totalmem","info":"os.totalmem()","kind":"f"},{"word":"type","info":"os.type()","kind":"f"},{"word":"uptime","info":"os.uptime()","kind":"f"},{"word":"userInfo","info":"os.userInfo([options])","kind":"f"}],"classes":{}},"path":{"props":[{"word":"basename","info":"path.basename(path[, ext])","kind":"f"},{"word":"delimiter","kind":"m","info":" "},{"word":"dirname","info":"path.dirname(path)","kind":"f"},{"word":"extname","info":"path.extname(path)","kind":"f"},{"word":"format","info":"path.format(pathObject)","kind":"f"},{"word":"isAbsolute","info":"path.isAbsolute(path)","kind":"f"},{"word":"join","info":"path.join([path1][, path2][, ...])","kind":"f"},{"word":"normalize","info":"path.normalize(path)","kind":"f"},{"word":"parse","info":"path.parse(path)","kind":"f"},{"word":"posix","kind":"m","info":" "},{"word":"relative","info":"path.relative(from, to)","kind":"f"},{"word":"resolve","info":"path.resolve([from ...], to)","kind":"f"},{"word":"sep","kind":"m","info":" "},{"word":"win32","kind":"m","info":" "}],"classes":{}},"punycode":{"props":[{"word":"decode","info":"punycode.decode(string)","kind":"f"},{"word":"encode","info":"punycode.encode(string)","kind":"f"},{"word":"toASCII","info":"punycode.toASCII(domain)","kind":"f"},{"word":"toUnicode","info":"punycode.toUnicode(domain)","kind":"f"},{"word":"ucs2","kind":"m","info":" "},{"word":"version","kind":"m","info":" "}],"classes":{}},"querystring":{"props":[{"word":"escape","kind":"m","info":" "},{"word":"parse","info":"querystring.parse(str[, sep][, eq][, options])","kind":"f"},{"word":"stringify","info":"querystring.stringify(obj[, sep][, eq][, options])","kind":"f"},{"word":"unescape","kind":"m","info":" "}],"classes":{}},"readline":{"props":[{"word":"clearLine","info":"readline.clearLine(stream, dir)","kind":"f"},{"word":"clearScreenDown","info":"readline.clearScreenDown(stream)","kind":"f"},{"word":"createInterface","info":"readline.createInterface(options)","kind":"f"},{"word":"cursorTo","info":"readline.cursorTo(stream, x, y)","kind":"f"},{"word":"emitKeypressEvents","info":"readline.emitKeypressEvents(stream)","kind":"f"},{"word":"Interface","kind":"f","info":" "},{"word":"moveCursor","info":"readline.moveCursor(stream, dx, dy)","kind":"f"}],"classes":{"Interface":[{"word":"close","info":"rl.close()","kind":"f"},{"word":"pause","info":"rl.pause()","kind":"f"},{"word":"prompt","info":"rl.prompt([preserveCursor])","kind":"f"},{"word":"question","info":"rl.question(query, callback)","kind":"f"},{"word":"resume","info":"rl.resume()","kind":"f"},{"word":"setPrompt","info":"rl.setPrompt(prompt)","kind":"f"},{"word":"write","info":"rl.write(data[, key])","kind":"f"}]}},"repl":{"props":[{"word":"REPLServer","kind":"f","info":" "},{"word":"start","info":"repl.start([options])","kind":"f"}],"classes":{"REPLServer":[{"word":"defineCommand","info":"replServer.defineCommand(keyword, cmd)","kind":"f"},{"word":"displayPrompt","info":"replServer.displayPrompt([preserveCursor])","kind":"f"}]}},"stream":{"props":[{"word":"Duplex","kind":"f","info":" "},{"word":"Readable","kind":"f","info":" "},{"word":"Transform","kind":"f","info":" "},{"word":"Writable","kind":"f","info":" "}],"classes":{"Duplex":[],"Readable":[{"word":"isPaused","info":"readable.isPaused()","kind":"f"},{"word":"pause","info":"readable.pause()","kind":"f"},{"word":"pipe","info":"readable.pipe(destination[, options])","kind":"f"},{"word":"read","info":"readable.read([size])","kind":"f"},{"word":"resume","info":"readable.resume()","kind":"f"},{"word":"setEncoding","info":"readable.setEncoding(encoding)","kind":"f"},{"word":"unpipe","info":"readable.unpipe([destination])","kind":"f"},{"word":"unshift","info":"readable.unshift(chunk)","kind":"f"},{"word":"wrap","info":"readable.wrap(stream)","kind":"f"}],"Transform":[],"Writable":[{"word":"cork","info":"writable.cork()","kind":"f"},{"word":"end","info":"writable.end([chunk][, encoding][, callback])","kind":"f"},{"word":"setDefaultEncoding","info":"writable.setDefaultEncoding(encoding)","kind":"f"},{"word":"uncork","info":"writable.uncork()","kind":"f"},{"word":"write","info":"writable.write(chunk[, encoding][, callback])","kind":"f"}]}},"stringdecoder":{"props":[{"word":"StringDecoder","kind":"f","info":" "}],"classes":{"StringDecoder":[{"word":"end","info":"decoder.end()","kind":"f"},{"word":"write","info":"decoder.write(buffer)","kind":"f"}]}},"timers":{"props":[{"word":"clearImmediate","info":"clearImmediate(immediateObject)","kind":"f"},{"word":"clearInterval","info":"clearInterval(intervalObject)","kind":"f"},{"word":"clearTimeout","info":"clearTimeout(timeoutObject)","kind":"f"},{"word":"ref","info":"ref()","kind":"f"},{"word":"setImmediate","info":"setImmediate(callback[, arg][, ...])","kind":"f"},{"word":"setInterval","info":"setInterval(callback, delay[, arg][, ...])","kind":"f"},{"word":"setTimeout","info":"setTimeout(callback, delay[, arg][, ...])","kind":"f"},{"word":"unref","info":"unref()","kind":"f"}],"classes":{}},"tls":{"props":[{"word":"connect","info":"tls.connect(options[, callback])","kind":"f"},{"word":"connect","info":"tls.connect(port[, host][, options][, callback])","kind":"f"},{"word":"createSecureContext","info":"tls.createSecureContext(options)","kind":"f"},{"word":"createSecurePair","info":"tls.createSecurePair([context][, isServer][, requestCert][, rejectUnauthorized][, options])","kind":"f"},{"word":"createServer","info":"tls.createServer(options[, secureConnectionListener])","kind":"f"},{"word":"CryptoStream","kind":"f","info":" "},{"word":"getCiphers","info":"tls.getCiphers()","kind":"f"},{"word":"SecurePair","kind":"f","info":" "},{"word":"Server","kind":"f","info":" "},{"word":"TLSSocket","kind":"f","info":" "}],"classes":{"CryptoStream":[{"word":"bytesWritten","kind":"m","info":" "}],"SecurePair":[],"Server":[{"word":"addContext","info":"server.addContext(hostname, context)","kind":"f"},{"word":"address","info":"server.address()","kind":"f"},{"word":"close","info":"server.close([callback])","kind":"f"},{"word":"connections","kind":"m","info":" "},{"word":"getTicketKeys","info":"server.getTicketKeys()","kind":"f"},{"word":"listen","info":"server.listen(port[, hostname][, callback])","kind":"f"},{"word":"maxConnections","kind":"m","info":" "},{"word":"setTicketKeys","info":"server.setTicketKeys(keys)","kind":"f"}],"TLSSocket":[{"word":"address","info":"tlsSocket.address()","kind":"f"},{"word":"authorizationError","kind":"m","info":" "},{"word":"authorized","kind":"m","info":" "},{"word":"encrypted","kind":"m","info":" "},{"word":"getCipher","info":"tlsSocket.getCipher()","kind":"f"},{"word":"getEphemeralKeyInfo","info":"tlsSocket.getEphemeralKeyInfo()","kind":"f"},{"word":"getPeerCertificate","info":"tlsSocket.getPeerCertificate([ detailed ])","kind":"f"},{"word":"getProtocol","info":"tlsSocket.getProtocol()","kind":"f"},{"word":"getSession","info":"tlsSocket.getSession()","kind":"f"},{"word":"getTLSTicket","info":"tlsSocket.getTLSTicket()","kind":"f"},{"word":"localAddress","kind":"m","info":" "},{"word":"localPort","kind":"m","info":" "},{"word":"remoteAddress","kind":"m","info":" "},{"word":"remoteFamily","kind":"m","info":" "},{"word":"remotePort","kind":"m","info":" "},{"word":"renegotiate","info":"tlsSocket.renegotiate(options, callback)","kind":"f"},{"word":"setMaxSendFragment","info":"tlsSocket.setMaxSendFragment(size)","kind":"f"},{"word":"TLSSocket","info":"new tls.TLSSocket(socket[, options])","kind":"f"}]}},"tty":{"props":[{"word":"isatty","info":"tty.isatty(fd)","kind":"f"},{"word":"ReadStream","kind":"f","info":" "},{"word":"WriteStream","kind":"f","info":" "}],"classes":{"ReadStream":[{"word":"isRaw","kind":"m","info":" "},{"word":"setRawMode","info":"rs.setRawMode(mode)","kind":"f"}],"WriteStream":[{"word":"columns","kind":"m","info":" "},{"word":"rows","kind":"m","info":" "}]}},"url":{"props":[{"word":"format","info":"url.format(urlObj)","kind":"f"},{"word":"parse","info":"url.parse(urlStr[, parseQueryString][, slashesDenoteHost])","kind":"f"},{"word":"resolve","info":"url.resolve(from, to)","kind":"f"}],"classes":{}},"util":{"props":[{"word":"_extend","info":"util._extend(obj)","kind":"f"},{"word":"debug","info":"util.debug(string)","kind":"f"},{"word":"debuglog","info":"util.debuglog(section)","kind":"f"},{"word":"deprecate","info":"util.deprecate(function, string)","kind":"f"},{"word":"error","info":"util.error([...])","kind":"f"},{"word":"format","info":"util.format(format[, ...])","kind":"f"},{"word":"inherits","info":"util.inherits(constructor, superConstructor)","kind":"f"},{"word":"inspect","info":"util.inspect(object[, options])","kind":"f"},{"word":"isArray","info":"util.isArray(object)","kind":"f"},{"word":"isBoolean","info":"util.isBoolean(object)","kind":"f"},{"word":"isBuffer","info":"util.isBuffer(object)","kind":"f"},{"word":"isDate","info":"util.isDate(object)","kind":"f"},{"word":"isError","info":"util.isError(object)","kind":"f"},{"word":"isFunction","info":"util.isFunction(object)","kind":"f"},{"word":"isNull","info":"util.isNull(object)","kind":"f"},{"word":"isNullOrUndefined","info":"util.isNullOrUndefined(object)","kind":"f"},{"word":"isNumber","info":"util.isNumber(object)","kind":"f"},{"word":"isObject","info":"util.isObject(object)","kind":"f"},{"word":"isPrimitive","info":"util.isPrimitive(object)","kind":"f"},{"word":"isRegExp","info":"util.isRegExp(object)","kind":"f"},{"word":"isString","info":"util.isString(object)","kind":"f"},{"word":"isSymbol","info":"util.isSymbol(object)","kind":"f"},{"word":"isUndefined","info":"util.isUndefined(object)","kind":"f"},{"word":"log","info":"util.log(string)","kind":"f"},{"word":"print","info":"util.print([...])","kind":"f"},{"word":"puts","info":"util.puts([...])","kind":"f"}],"classes":{}},"v8":{"props":[{"word":"getHeapSpaceStatistics","info":"getHeapSpaceStatistics()","kind":"f"},{"word":"getHeapStatistics","info":"getHeapStatistics()","kind":"f"},{"word":"setFlagsFromString","info":"setFlagsFromString(string)","kind":"f"}],"classes":{}},"vm":{"props":[{"word":"createContext","info":"vm.createContext([sandbox])","kind":"f"},{"word":"isContext","info":"vm.isContext(sandbox)","kind":"f"},{"word":"runInContext","info":"vm.runInContext(code, contextifiedSandbox[, options])","kind":"f"},{"word":"runInDebugContext","info":"vm.runInDebugContext(code)","kind":"f"},{"word":"runInNewContext","info":"vm.runInNewContext(code[, sandbox][, options])","kind":"f"},{"word":"runInThisContext","info":"vm.runInThisContext(code[, options])","kind":"f"},{"word":"Script","kind":"f","info":" "}],"classes":{"Script":[{"word":"runInContext","info":"script.runInContext(contextifiedSandbox[, options])","kind":"f"},{"word":"runInNewContext","info":"script.runInNewContext([sandbox][, options])","kind":"f"},{"word":"runInThisContext","info":"script.runInThisContext([options])","kind":"f"},{"word":"Script","info":"new vm.Script(code, options)","kind":"f"}]}},"zlib":{"props":[{"word":"createDeflate","info":"zlib.createDeflate([options])","kind":"f"},{"word":"createDeflateRaw","info":"zlib.createDeflateRaw([options])","kind":"f"},{"word":"createGunzip","info":"zlib.createGunzip([options])","kind":"f"},{"word":"createGzip","info":"zlib.createGzip([options])","kind":"f"},{"word":"createInflate","info":"zlib.createInflate([options])","kind":"f"},{"word":"createInflateRaw","info":"zlib.createInflateRaw([options])","kind":"f"},{"word":"createUnzip","info":"zlib.createUnzip([options])","kind":"f"},{"word":"Deflate","kind":"f","info":" "},{"word":"DeflateRaw","kind":"f","info":" "},{"word":"Gunzip","kind":"f","info":" "},{"word":"Gzip","kind":"f","info":" "},{"word":"Inflate","kind":"f","info":" "},{"word":"InflateRaw","kind":"f","info":" "},{"word":"Unzip","kind":"f","info":" "},{"word":"Zlib","kind":"f","info":" "}],"classes":{"Deflate":[],"DeflateRaw":[],"Gunzip":[],"Gzip":[],"Inflate":[],"InflateRaw":[],"Unzip":[],"Zlib":[{"word":"flush","info":"zlib.flush([kind], callback)","kind":"f"},{"word":"params","info":"zlib.params(level, strategy, callback)","kind":"f"},{"word":"reset","info":"zlib.reset()","kind":"f"}]}}},"vars":[{"word":"\\_\\_dirname","kind":"v","info":" "},{"word":"\\_\\_filename","kind":"v","info":" "},{"word":"Buffer","kind":"v","info":" "},{"word":"clearImmediate","info":"clearImmediate(immediateObject)","kind":"f"},{"word":"clearInterval","info":"clearInterval(intervalObject)","kind":"f"},{"word":"clearTimeout","info":"clearTimeout(timeoutObject)","kind":"f"},{"word":"console","kind":"v","info":" "},{"word":"exports","kind":"v","info":" "},{"word":"global","kind":"v","info":" "},{"word":"module","kind":"v","info":" "},{"word":"process","kind":"v","info":" "},{"word":"process","kind":"v","info":" "},{"word":"require","info":"require()","kind":"f"},{"word":"setImmediate","info":"setImmediate(callback[, arg][, ...])","kind":"f"},{"word":"setInterval","info":"setInterval(callback, delay[, arg][, ...])","kind":"f"},{"word":"setTimeout","info":"setTimeout(callback, delay[, arg][, ...])","kind":"f"}]}